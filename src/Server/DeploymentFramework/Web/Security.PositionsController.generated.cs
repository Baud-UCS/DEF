// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
using Baud.Deployment.Web.Framework.Security;
namespace Baud.Deployment.Web.Areas.Security.Controllers
{
    public partial class PositionsController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected PositionsController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Index()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Detail()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Detail);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Disable()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Disable);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Enable()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Enable);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateName()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateName);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public PositionsController Actions { get { return MVC.Security.Positions; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "Security";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Positions";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Positions";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Index = "Index";
            public readonly string Detail = "Detail";
            public readonly string Disable = "Disable";
            public readonly string Enable = "Enable";
            public readonly string UpdateName = "UpdateName";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Index = "Index";
            public const string Detail = "Detail";
            public const string Disable = "Disable";
            public const string Enable = "Enable";
            public const string UpdateName = "UpdateName";
        }


        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Index = "Index";
                public readonly string UpdateName = "UpdateName";
            }
            public readonly string Index = "~/Areas/Security/Views/Positions/Index.cshtml";
            public readonly string UpdateName = "~/Areas/Security/Views/Positions/UpdateName.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_PositionsController : Baud.Deployment.Web.Areas.Security.Controllers.PositionsController
    {
        public T4MVC_PositionsController() : base(Dummy.Instance) { }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, Baud.Deployment.Web.Areas.Security.Models.Positions.IndexFilter filter, Baud.Deployment.Web.Framework.Web.PagingData paging);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(Baud.Deployment.Web.Areas.Security.Models.Positions.IndexFilter filter, Baud.Deployment.Web.Framework.Web.PagingData paging)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "filter", filter);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "paging", paging);
            IndexOverride(callInfo, filter, paging);
            return callInfo;
        }

        [NonAction]
        partial void DetailOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, short id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Detail(short id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Detail);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DetailOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void DisableOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, short id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Disable(short id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Disable);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            DisableOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void EnableOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, short id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Enable(short id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Enable);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            EnableOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void UpdateNameOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, short id, string name);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateName(short id, string name)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "name", name);
            UpdateNameOverride(callInfo, id, name);
            return callInfo;
        }

        [NonAction]
        partial void UpdateNameOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, short id);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateName(short id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            UpdateNameOverride(callInfo, id);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
